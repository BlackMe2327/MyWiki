"use strict";(self.webpackChunkmy_wiki=self.webpackChunkmy_wiki||[]).push([[9747],{3905:(t,n,e)=>{e.d(n,{Zo:()=>p,kt:()=>m});var r=e(7294);function l(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function i(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function a(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){l(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function c(t,n){if(null==t)return{};var e,r,l=function(t,n){if(null==t)return{};var e,r,l={},i=Object.keys(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||(l[e]=t[e]);return l}(t,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)e=i[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var s=r.createContext({}),u=function(t){var n=r.useContext(s),e=n;return t&&(e="function"==typeof t?t(n):a(a({},n),t)),e},p=function(t){var n=u(t.components);return r.createElement(s.Provider,{value:n},t.children)},h={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},o=r.forwardRef((function(t,n){var e=t.components,l=t.mdxType,i=t.originalType,s=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),o=u(e),m=l,g=o["".concat(s,".").concat(m)]||o[m]||h[m]||i;return e?r.createElement(g,a(a({ref:n},p),{},{components:e})):r.createElement(g,a({ref:n},p))}));function m(t,n){var e=arguments,l=n&&n.mdxType;if("string"==typeof t||l){var i=e.length,a=new Array(i);a[0]=o;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=t,c.mdxType="string"==typeof t?t:l,a[1]=c;for(var u=2;u<i;u++)a[u]=e[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,e)}o.displayName="MDXCreateElement"},9415:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=e(7462),l=(e(7294),e(3905));const i={},a="04-\u4e32\u7684\u6a21\u5f0f\u5339\u914d",c={unversionedId:"DataStructure/\u4e32\u7684\u6a21\u5f0f\u5339\u914d",id:"DataStructure/\u4e32\u7684\u6a21\u5f0f\u5339\u914d",title:"04-\u4e32\u7684\u6a21\u5f0f\u5339\u914d",description:"\u4e32-\u57fa\u7840",source:"@site/docs/DataStructure/04-\u4e32\u7684\u6a21\u5f0f\u5339\u914d.md",sourceDirName:"DataStructure",slug:"/DataStructure/\u4e32\u7684\u6a21\u5f0f\u5339\u914d",permalink:"/MyWiki/docs/DataStructure/\u4e32\u7684\u6a21\u5f0f\u5339\u914d",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DataStructure/04-\u4e32\u7684\u6a21\u5f0f\u5339\u914d.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"03-\u6808\u548c\u961f\u5217",permalink:"/MyWiki/docs/DataStructure/\u6808\u548c\u961f\u5217"},next:{title:"05-\u6570\u7ec4\u3001\u77e9\u9635\u3001\u5e7f\u4e49\u8868",permalink:"/MyWiki/docs/DataStructure/\u6570\u7ec4\u3001\u77e9\u9635\u3001\u5e7f\u4e49\u8868"}},s={},u=[{value:"\u4e32-\u57fa\u7840",id:"\u4e32-\u57fa\u7840",level:2},{value:"\u4e32\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784",id:"\u4e32\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784",level:3},{value:"\u5b9a\u957f\u7684\u5b58\u50a8\u7ed3\u6784",id:"\u5b9a\u957f\u7684\u5b58\u50a8\u7ed3\u6784",level:4},{value:"\u53d8\u957f\u7684\u5b58\u50a8\u7ed3\u6784",id:"\u53d8\u957f\u7684\u5b58\u50a8\u7ed3\u6784",level:4},{value:"\u4e32\u7684\u57fa\u672c\u64cd\u4f5c",id:"\u4e32\u7684\u57fa\u672c\u64cd\u4f5c",level:3},{value:"\u8d4b\u503c\u64cd\u4f5c",id:"\u8d4b\u503c\u64cd\u4f5c",level:4},{value:"\u53d6\u4e32\u957f\u5ea6\u64cd\u4f5c",id:"\u53d6\u4e32\u957f\u5ea6\u64cd\u4f5c",level:4},{value:"\u4e32\u6bd4\u8f83\u64cd\u4f5c",id:"\u4e32\u6bd4\u8f83\u64cd\u4f5c",level:4},{value:"\u4e32\u8fde\u63a5\u64cd\u4f5c",id:"\u4e32\u8fde\u63a5\u64cd\u4f5c",level:4},{value:"\u6c42\u5b50\u4e32\u64cd\u4f5c",id:"\u6c42\u5b50\u4e32\u64cd\u4f5c",level:4},{value:"\u4e32\u6e05\u7a7a",id:"\u4e32\u6e05\u7a7a",level:4},{value:"KMP\u7b97\u6cd5\uff08\u5feb\u901f\u4ece\u6bcd\u4e32\u4e2d\u627e\u51fa\u5b50\u4e32\uff09",id:"kmp\u7b97\u6cd5\u5feb\u901f\u4ece\u6bcd\u4e32\u4e2d\u627e\u51fa\u5b50\u4e32",level:3},{value:"KMP\u7b97\u6cd5\u6539\u8fdb",id:"kmp\u7b97\u6cd5\u6539\u8fdb",level:3}],p={toc:u};function h(t){let{components:n,...e}=t;return(0,l.kt)("wrapper",(0,r.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"04-\u4e32\u7684\u6a21\u5f0f\u5339\u914d"},"04-\u4e32\u7684\u6a21\u5f0f\u5339\u914d"),(0,l.kt)("h2",{id:"\u4e32-\u57fa\u7840"},"\u4e32-\u57fa\u7840"),(0,l.kt)("h3",{id:"\u4e32\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784"},"\u4e32\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784"),(0,l.kt)("h4",{id:"\u5b9a\u957f\u7684\u5b58\u50a8\u7ed3\u6784"},"\u5b9a\u957f\u7684\u5b58\u50a8\u7ed3\u6784"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char str[maxSize+1];\n    int length;\n}Str;\n")),(0,l.kt)("p",null,"maxSize\u4e3a\u5df2\u7ecf\u5b9a\u4e49\u7684\u5e38\u91cf\uff0c\u8868\u793a\u4e32\u7684\u6700\u5927\u957f\u5ea6\uff1b"),(0,l.kt)("p",null,"str\u6570\u7ec4\u957f\u5ea6\u5b9a\u4e49\u4e3amaxSize+1,\u662f\u56e0\u4e3a\u591a\u51fa\u4e00\u4e2a'\\0'\u4f5c\u4e3a\u7ed3\u675f\u6807\u8bb0\u3002"),(0,l.kt)("h4",{id:"\u53d8\u957f\u7684\u5b58\u50a8\u7ed3\u6784"},"\u53d8\u957f\u7684\u5b58\u50a8\u7ed3\u6784"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char *ch;\n    int length;\n}Str;\n")),(0,l.kt)("p",null,"Eg:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Str S;\nS.length = L;//L\u8868\u793a\u4e32\u957f\u5ea6\nS.ch = (char*)malloc((L+1) * sizeof(char));//**********************\nS.ch[length\u8303\u56f4\u5185\u4f4d\u7f6e] = \u67d0\u5b57\u7b26\u53d8\u91cf;\n\u67d0\u5b57\u7b26\u53d8\u91cf = S.ch[length\u8303\u56f4\u5185\u4f4d\u7f6e];\nfree(S.ch);\n")),(0,l.kt)("h3",{id:"\u4e32\u7684\u57fa\u672c\u64cd\u4f5c"},"\u4e32\u7684\u57fa\u672c\u64cd\u4f5c"),(0,l.kt)("h4",{id:"\u8d4b\u503c\u64cd\u4f5c"},"\u8d4b\u503c\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char *ch;\n    int length;\n}Str;\nint strAssign(Str &str,char *ch){\n    if(str.ch)\n        free(str.ch);\n    int len = 0;\n    char *c = ch;\n    while(*c){\n        ++len;\n        ++c;\n    }\n    if(len == 0){\n        str.ch = NULL;\n        str.length = 0;\n        return 1;\n    }else{\n        str.ch = (char*)malloc(sizeof(char) * (len+1));\n        //\u5224\u65ad\u5185\u5b58\u4e2d\u662f\u5426\u8fd8\u6709\u7a7a\u95f4\uff0c\u5373malloc\u5206\u914d\u7a7a\u95f4\u662f\u5426\u6210\u529f\n        if(str.ch == NULL){\n            return 0;\n        }else{\n            c = ch;\n            for(int i=0;i<len;++i,++c){\n                str.ch[i] = *c;\n            }\n            str.length = len;\n            return 1;\n        }\n    }\n}\n")),(0,l.kt)("h4",{id:"\u53d6\u4e32\u957f\u5ea6\u64cd\u4f5c"},"\u53d6\u4e32\u957f\u5ea6\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char *ch;\n    int length;\n}Str;\nint strLength(Str str){\n    return str.length;\n}\n")),(0,l.kt)("h4",{id:"\u4e32\u6bd4\u8f83\u64cd\u4f5c"},"\u4e32\u6bd4\u8f83\u64cd\u4f5c"),(0,l.kt)("p",null,"\u8bbe\u4e24\u4e32C~1~\u548cC~2~\u4e2d\u5f85\u6bd4\u8f83\u5b57\u7b26\u5206\u522b\u4e3aa\u548cb;"),(0,l.kt)("p",null,"1.\u82e5ASCII~a~<ASCII~b~\uff0c\u5219\u8fd4\u56deC~1~<C~2~\u6807\u8bb0\uff08\u4e00\u4e2a\u8d1f\u6570\uff09;"),(0,l.kt)("p",null,"2.\u82e5ASCII~a~>ASCII~b~\uff0c\u5219\u8fd4\u56deC~1~>C~2~\u6807\u8bb0\uff08\u4e00\u4e2a\u6b63\u6570\uff09;"),(0,l.kt)("p",null,"3.\u82e5ASCII~a~=ASCII~b~\uff0c\u5219\u6309\u7167\u4e4b\u524d\u7684\u89c4\u5219\u7ee7\u7eed\u6bd4\u8f83\u4e24\u4e32\u4e2d\u4e0b\u4e00\u5bf9\u5b57\u7b26\uff1b"),(0,l.kt)("p",null,"4.\u7ecf\u8fc7\u4e0a\u8ff0\u6b65\u9aa4\u6ca1\u6709\u6bd4\u8f83\u51faC~1~\u548cC~2~\u7684\u5927\u5c0f\u60c5\u51b5\u4e0b\uff0c\u5148\u7ed3\u675f\u7684\u4e32\u4e3a\u8f83\u5c0f\u4e32\uff0c\u4e24\u4e32\u540c\u65f6\u7ed3\u675f\u5219\u8fd4\u56de\u4e24\u4e32\u76f8\u7b49\u6807\u8bb0\uff080\uff09;"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char *ch;\n    int length;\n}Str;\nint strCpmpare(Str s1,Str s2){\n    for(int i=0;i<s1.length&&i<s2.length;++i){\n        if(s1.ch[i]!=s2.length[i]){\n            return s1.ch[i] - s2.ch[i];//\u62ff\u4e24\u4e2a\u5b57\u6bcd\u7684ASCII\u7801\u505a\u51cf\u6cd5\n        }\n    }\n    return s1.length - s2.length;\n}\n")),(0,l.kt)("h4",{id:"\u4e32\u8fde\u63a5\u64cd\u4f5c"},"\u4e32\u8fde\u63a5\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char *ch;\n    int length;\n}Str;\nint concat(Str &str,Str str1,Str str2){\n    if(str.ch){\n        free(str.ch);\n        str.ch = NULL;\n    }\n    str.ch = (char*)malloc(sizeof(char) * (str1.length+str2.length+1));\n    if(!str.ch) return 0;//\u5206\u914d\u7a7a\u95f4\u5931\u8d25\u5219\u6574\u4e2a\u51fd\u6570\u6267\u884c\u5931\u8d25\n    int i=0;\n    while(i<str1.length){\n        str.ch[i]=str1.ch[i];\n        ++i;\n    }\n    int j=0;\n    while(j<=str2.length){\n        str.ch[i+j]=str2.ch[j];\n        ++j;\n    }\n    str.length = str1.length + str2.length;\n    return 1;\n}\n")),(0,l.kt)("h4",{id:"\u6c42\u5b50\u4e32\u64cd\u4f5c"},"\u6c42\u5b50\u4e32\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char *ch;\n    int length;\n}Str;\n//\u4ecestr\u53d6\u4e00\u4e2a\u4ee5pos\u4e3a\u8d77\u70b9\u957f\u5ea6\u4e3alen\u7684\u5b50\u4e32,substr\u5b58\u50a8\u7684\u662f\u622a\u53d6\u5230\u7684\u7ed3\u679c\nint getSubString(Str &substr,Str str,int pos,int len){\n    if(pos<0 || pos>=str.length || len<0 || len>str.length-pos) return 0;\n    if(substr.ch){\n        free(substr.ch);\n        substr.ch=NULL;\n    }\n    if(len==0){\n        substr.ch=NULL;\n        substr.length=0;\n        return 1;\n    }else{\n        substr.ch = (char*)malloc(sizeof(char) * (len+1));\n        int i=pos;\n        int j=0;\n        while(i<pos+len){\n            substr.ch[j]=str.ch[i];\n            ++i;\n            ++j;\n        }\n        substr.ch[j]='\\0';\n        substr.length=len;\n        reutn 1;\n    }\n}\n")),(0,l.kt)("h4",{id:"\u4e32\u6e05\u7a7a"},"\u4e32\u6e05\u7a7a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"typedef struct{\n    char *ch;\n    int length;\n}Str;\nint clearString(Str &str){\n    if(str.ch){\n        free(str.ch);\n        str.ch=NULL;\n    }\n    str.length = 0;\n    return 1;\n}\n")),(0,l.kt)("h3",{id:"kmp\u7b97\u6cd5\u5feb\u901f\u4ece\u6bcd\u4e32\u4e2d\u627e\u51fa\u5b50\u4e32"},"KMP\u7b97\u6cd5\uff08\u5feb\u901f\u4ece\u6bcd\u4e32\u4e2d\u627e\u51fa\u5b50\u4e32\uff09"),(0,l.kt)("p",null,"\u516c\u5171\u524d\u540e\u7f00\u7684\u957f\u5ea6 < \u5b50\u4e32\u7684\u957f\u5ea6\uff1b"),(0,l.kt)("p",null,"\u4e3b\u4e32\u6bd4\u8f83\u7684\u5f53\u524d\u4f4d\u7f6e = \u6700\u5927\u516c\u5171\u524d\u540e\u7f00\u957f\u5ea6+1\uff1b"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"i\u53ef\u4ee5\u4e0d\u52a8\uff0c\u6211\u4eec\u53ea\u9700\u8981\u79fb\u52a8j")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/BlackMe2327/cloudimages27/blob/main/img/17083828-cdb207f5460f4645982171e58571a741.png?raw=true",alt:"img"})),(0,l.kt)("p",null,"\u5229\u7528\u5df2\u7ecf\u90e8\u5206\u5339\u914d\u8fd9\u4e2a\u6709\u6548\u4fe1\u606f\uff0c\u4fdd\u6301i\u6307\u9488\u4e0d\u56de\u6eaf\uff0c\u901a\u8fc7\u4fee\u6539j\u6307\u9488\uff0c\u8ba9\u6a21\u5f0f\u4e32\u5c3d\u91cf\u5730\u79fb\u52a8\u5230\u6709\u6548\u7684\u4f4d\u7f6e"),(0,l.kt)("p",null,"KMP\u7684\u91cd\u70b9\u5c31\u5728\u4e8e\u5f53\u67d0\u4e00\u4e2a\u5b57\u7b26\u4e0e\u4e3b\u4e32\u4e0d\u5339\u914d\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u77e5\u9053j\u6307\u9488\u8981\u79fb\u52a8\u5230\u54ea\uff1f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/BlackMe2327/cloudimages27/blob/main/img/17083912-49365b7e67cd4877b2f501074dae68d2.png?raw=true",alt:"img"})),(0,l.kt)("p",null,"C\u548cD\u4e0d\u5339\u914d\u4e86\uff0c\u6211\u4eec\u8981\u628aj\u79fb\u52a8\u5230\u54ea\uff1f\u663e\u7136\u662f\u7b2c1\u4f4d\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u524d\u9762\u6709\u4e00\u4e2aA\u76f8\u540c\u554a"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/BlackMe2327/cloudimages27/blob/main/img/17083929-a9ccfb08833e4cf1a42c30f05608f8f5.png?raw=true",alt:"img"})),(0,l.kt)("p",null,"\u5982\u4e0b\u56fe\u4e5f\u662f\u4e00\u6837\u7684\u60c5\u51b5\uff1a"),(0,l.kt)("p",null," ",(0,l.kt)("img",{parentName:"p",src:"https://github.com/BlackMe2327/cloudimages27/blob/main/img/17084030-82e4b71b85a440c5a636d57503931415.png?raw=true",alt:"img"}),"\t"),(0,l.kt)("p",null,"\u53ef\u4ee5\u628aj\u6307\u9488\u79fb\u52a8\u5230\u7b2c2\u4f4d\uff0c\u56e0\u4e3a\u524d\u9762\u6709\u4e24\u4e2a\u5b57\u6bcd\u662f\u4e00\u6837\u7684\uff1a"),(0,l.kt)("p",null," ",(0,l.kt)("img",{parentName:"p",src:"https://github.com/BlackMe2327/cloudimages27/blob/main/img/17084037-cc3c34200809414e9421c316ceba2cda.png?raw=true",alt:"img"})),(0,l.kt)("p",null,"\u81f3\u6b64\u6211\u4eec\u53ef\u4ee5\u5927\u6982\u770b\u51fa\u4e00\u70b9\u7aef\u502a\uff0c\u5f53\u5339\u914d\u5931\u8d25\u65f6\uff0cj\u8981\u79fb\u52a8\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6ek\u3002\u5b58\u5728\u7740\u8fd9\u6837\u7684\u6027\u8d28\uff1a\u6700\u524d\u9762\u7684k\u4e2a\u5b57\u7b26\u548cj\u4e4b\u524d\u7684\u6700\u540ek\u4e2a\u5b57\u7b26\u662f\u4e00\u6837\u7684\u3002"),(0,l.kt)("img",{src:"https://github.com/BlackMe2327/cloudimages27/blob/main/img/image-20211026225142393-1.png?raw=true",alt:"image-20211026225142393-1"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"void getNext(Str substr, int next[]){\n    int j=1,t;\n    next[1]=0;\n    while(j<substr.length){\n        if(substr.ch[j] == substr.ch[t]){\n            next[j+1] = t+1;\n            ++j;\n            ++t;\n        }else{\n            t=next[t];\n        }\n    }\n}\n\nint KMP(Str str,Str substr,int next[]){\n    int i=1,j=1;\n    while(i<=str.length && j<=substr.length){\n        if(j==0||str.ch[i]==substr.ch[j]){\n            ++i;\n            ++j;\n        }else{\n            j=next[j];\n        }\n    }\n    if(j>substr.length){\n        return i=substr.length;\n    }else{\n        return 0;\n    }\n}\n")),(0,l.kt)("h3",{id:"kmp\u7b97\u6cd5\u6539\u8fdb"},"KMP\u7b97\u6cd5\u6539\u8fdb"),(0,l.kt)("p",null,"\u6c42\u89e3nextval\u6570\u7ec4"),(0,l.kt)("img",{src:"https://github.com/BlackMe2327/cloudimages27/blob/main/img/image-20211026230849587.png?raw=true",alt:"image-20211026230849587"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"void getNextval(Str substr, int nextval[], int next[]){\n    int j=1,t;\n    nextval[1]=0;\n    while(j<substr.length){\n        if(t=0||substr.ch[j] == substr.ch[t]){\n            if(substr.ch[j+1]!=substr.ch[t+1]){\n                nextval[j+1]=t+1;\n            }else{\n                nextval[j+1]=nextval[t+1];              \n            }\n            ++j\n            ++t;\n        }else{\n            t=nextval[t];\n        }\n    }\n}\n")))}h.isMDXComponent=!0}}]);